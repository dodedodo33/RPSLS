//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RPSLS_WPF.RPSLSService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Symbol", Namespace="http://schemas.datacontract.org/2004/07/RPSLS_WCF")]
    public enum Symbol : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ROCK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PAPER = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SCISSORS = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LIZARD = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SPOCK = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Result", Namespace="http://schemas.datacontract.org/2004/07/RPSLS_WCF")]
    [System.SerializableAttribute()]
    public partial class Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RPSLS_WPF.RPSLSService.Symbol ComputerSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime GameTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RPSLS_WPF.RPSLSService.Symbol UserSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WinnerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RPSLS_WPF.RPSLSService.Symbol ComputerSymbol {
            get {
                return this.ComputerSymbolField;
            }
            set {
                if ((this.ComputerSymbolField.Equals(value) != true)) {
                    this.ComputerSymbolField = value;
                    this.RaisePropertyChanged("ComputerSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime GameTime {
            get {
                return this.GameTimeField;
            }
            set {
                if ((this.GameTimeField.Equals(value) != true)) {
                    this.GameTimeField = value;
                    this.RaisePropertyChanged("GameTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RPSLS_WPF.RPSLSService.Symbol UserSymbol {
            get {
                return this.UserSymbolField;
            }
            set {
                if ((this.UserSymbolField.Equals(value) != true)) {
                    this.UserSymbolField = value;
                    this.RaisePropertyChanged("UserSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Winner {
            get {
                return this.WinnerField;
            }
            set {
                if ((object.ReferenceEquals(this.WinnerField, value) != true)) {
                    this.WinnerField = value;
                    this.RaisePropertyChanged("Winner");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RPSLSService.IRPSLSService")]
    public interface IRPSLSService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRPSLSService/SendMove", ReplyAction="http://tempuri.org/IRPSLSService/SendMoveResponse")]
        RPSLS_WPF.RPSLSService.Result SendMove(string name, RPSLS_WPF.RPSLSService.Symbol symbol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRPSLSService/SendMove", ReplyAction="http://tempuri.org/IRPSLSService/SendMoveResponse")]
        System.Threading.Tasks.Task<RPSLS_WPF.RPSLSService.Result> SendMoveAsync(string name, RPSLS_WPF.RPSLSService.Symbol symbol);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRPSLSServiceChannel : RPSLS_WPF.RPSLSService.IRPSLSService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RPSLSServiceClient : System.ServiceModel.ClientBase<RPSLS_WPF.RPSLSService.IRPSLSService>, RPSLS_WPF.RPSLSService.IRPSLSService {
        
        public RPSLSServiceClient() {
        }
        
        public RPSLSServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RPSLSServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RPSLSServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RPSLSServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RPSLS_WPF.RPSLSService.Result SendMove(string name, RPSLS_WPF.RPSLSService.Symbol symbol) {
            return base.Channel.SendMove(name, symbol);
        }
        
        public System.Threading.Tasks.Task<RPSLS_WPF.RPSLSService.Result> SendMoveAsync(string name, RPSLS_WPF.RPSLSService.Symbol symbol) {
            return base.Channel.SendMoveAsync(name, symbol);
        }
    }
}
